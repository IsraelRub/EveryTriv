services:
  # PostgreSQL Database - Local Development
  postgres-local:
    image: postgres:16-alpine
    container_name: everytriv-postgres-local
    restart: unless-stopped
    environment:
      POSTGRES_DB: everytriv_dev
      POSTGRES_USER: everytriv_user
      POSTGRES_PASSWORD: everytriv_local_2025
    ports:
      - '5433:5432'
    volumes:
      - postgres_local_data:/var/lib/postgresql/data
      - ./server/database/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U everytriv_user -d everytriv_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - everytriv-local-network

  # Redis Cache - Local Development
  redis-local:
    image: redis:7-alpine
    container_name: everytriv-redis-local
    restart: unless-stopped
    ports:
      - '6380:6379'
    volumes:
      - redis_local_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - everytriv-local-network

  # pgAdmin - Web-based PostgreSQL administration
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: everytriv-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    depends_on:
      - postgres-local
    networks:
      - everytriv-local-network

  # Redis Commander - Web-based Redis administration
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: everytriv-redis-commander
    restart: unless-stopped
    environment:
      - REDIS_HOSTS=local:redis-local:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis-local
    networks:
      - everytriv-local-network

  # WebDB - Modern web-based database client
  webdb:
    image: webdb/app:latest
    container_name: everytriv-webdb-local
    restart: unless-stopped
    ports:
      - "127.0.0.1:22071:22071"
    volumes:
      - webdb_local_data:/usr/src/app/static/version
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      postgres-local:
        condition: service_healthy
    networks:
      - everytriv-local-network

volumes:
  postgres_local_data:
  redis_local_data:
  webdb_local_data:

networks:
  everytriv-local-network:
    driver: bridge
