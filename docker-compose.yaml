version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:16-alpine
    container_name: everytriv-db
    restart: unless-stopped
    env_file:
      - .env.local
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-everytriv_db}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    ports:
      - '5432:5432'
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./server/database/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - everytriv-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: everytriv-redis
    restart: unless-stopped
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    networks:
      - everytriv-network

  # pgAdmin - Web-based PostgreSQL administration
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: everytriv-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@everytriv.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    depends_on:
      - db
    networks:
      - everytriv-network

  # Redis Commander - Web-based Redis administration
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: everytriv-redis-commander
    restart: unless-stopped
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - everytriv-network

  # Backend Server
  server:
    build: 
      context: ./server
      dockerfile: Dockerfile
    container_name: everytriv-server
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=${POSTGRES_USER:-postgres}
      - DB_PASS=${POSTGRES_PASSWORD:-postgres}
      - DB_NAME=${POSTGRES_DB:-everytriv_db}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - MISTRAL_API_KEY=${MISTRAL_API_KEY}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - '3000:3000'
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - ./server:/app
      - /app/node_modules
    command: npm run start:dev
    networks:
      - everytriv-network

  # Frontend Client
  client:
    build: 
      context: ./client
      dockerfile: Dockerfile
    container_name: everytriv-client
    restart: unless-stopped
    ports:
      - '5173:5173'
    volumes:
      - ./client:/app
      - /app/node_modules
    command: npm run dev -- --host
    depends_on:
      - server
    networks:
      - everytriv-network

volumes:
  db_data:
  redis_data:

networks:
  everytriv-network:
    driver: bridge